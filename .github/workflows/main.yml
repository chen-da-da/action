name: Build OpenWrt
on:
  repository_dispatch:
  workflow_dispatch:
jobs:
  biuld:
    runs-on: ubuntu-latest
    steps:
    - name: 安装编译依赖
      run: |
       sudo apt update -y
       sudo apt full-upgrade -y
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
       bzip2 ccache cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib g++-multilib \
        git gperf haveged help2man intltool lib32gcc1 libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
        mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply \
        python-docutils qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
        vim wget xmlto xxd zlib1g-dev
    - name: 下载源代码，更新 feeds 并选择配置
      run: |
        git clone -b openwrt-21.02 --single-branch https://github.com/immortalwrt/immortalwrt
        cd immortalwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        make defconfig
    - name: 编译
      id: biuld1
      run: |
        cd immortalwrt
        make download -j8
        make -j$(nproc) ||  make -j1 V=s
        echo "::set-output name=status::success"
#     - name: 打包文件
#       run: |
#         zip -n 9 -vr lede.zip lede
#         pwd
#         ls -lh
#         #echo "FIRMWARE=$PWD/lede.zip" >> $GITHUB_ENV
#         echo "FIRMWARE=$PWD/lede.zip"
#     - name: 整理文件
#       run: |
#         cd lede/bin/targets/*/*
#         rm -rf packages
#         echo "FIRMWARE=$PWD" >> $GITHUB_ENV
#         #echo "::set-output name=status::success"
#     - name: 上传文件
#       uses: actions/upload-artifact@main
#       if: steps.biuld1.outputs.status == 'success' && !cancelled()
#       with:
#        name: lede
#        path: ${{ env.FIRMWARE }}
#     - name: 上传WeTransfer
#       id: wetransfer
#       #if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
#       run: |
#         curl -fsSL git.io/file-transfer | sh
#         ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
#         echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
#         echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"
